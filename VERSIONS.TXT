
NOTE: If you're having trouble with a new version, try deleting '.build' dirs!!!!!

***** V37 *****

Modules:

lang.cpp - MSVC version now uses SEH, seems to be the only way to catch int divide by 0.

Mojo GLFW/Android/iOS - no more embedded text files: LoadString now uses real files.

Mojo GLFW - added joystick support. No d-pad yet though...

Mojo iOS - fixed new sample loader to use 3.2 compatible calls only.


Trans (1.08):

Fixed default GLFW target so release build links with static CRT.

Module munging fixed - you can now have 2 modules with same name.

Cleaned up preprocessor a bit.

Added #Error directive.

Fixed class function overriding.

Fixed field initializers accessing self methods.


***** V36 *****

Modules:

Fixed nasty crash bug in Map.


Monk:

Disabled ParseError for gcc errors.

Replaced a bunch of \n's with ~n's.


Trans (1.07):

Fixed const eval of negative vals.

Fixed INTLIT '%' prefix.

Fixed new override bug for overrides that skip a class.

Fixed EvalFunc bug that allowed ()().

Fixed infinite loop with unterminated string literal.


***** V35 ***** 

Modules:

Mojo iOS sample loader now uses audio toolbox for mp3 support.

Mojo Html5 SetScissor fixed.

Added Mojo Music commands - see mojo.audio

Mojo Android volume control now always sets media volume.


Trans (1.06):

Fixed float literal 'e' notation.

Fixed BalanceTypes to generate an error instead of returning null.

Rearranged and tidied up post semant class validation code.

Fixed ObjectType.EqualsType to use new ClassDecl.EqualsClass method for generic class comparison fix.


***** V34b *****

Quick fix release for nasty return stmt bug!


***** V34 *****

Modules:

LoadState/SaveState now only use cookies on FF and IE for 'file://' document.URLs.

Added a Backwards() method to List<T> and Stack<T> that allows you to iterate through elements backwards with an EachIn loop.


Trans (1.05):

Fixed non-void abstract methods in strict mode complaining about missing return expression.

Fixed IntType.ExtendsType infinite recursion crash.

Added SCREEN_ORIENTATION to android CONFIG.TXT.

Fixed overloading method not used overloaded method's munging.


***** V33 *****

Modules:

Added experimental DOM module - see gldemo.monkey in modules/dom.

Tweaked html5 update rate timing code - shouldn't 'leak' time anymore and may be smoother on some browsers? More work needed here...

Only Chrome/Safari use localStorage for LoadState/SaveState, others now use cookies. IE9 doesn't like localStorage at all, and FF doesn't like it with file:// documents.

iOS accelerometer now tries to compensate for UI orientation - you should still lock accelerometer 
games to a single orientation though.

Fixed iOS screen saver with accelerometer based games.

Changed some android defaults in manifest - fullscreen theme + no reset on orientation change.

Fixed glPixelStorei unpack alignment for GLFW target. Added fox to iOS too.

Fixed line thickness scaling in Flash.

Added checks to mojo graphics to ensure rendering commands are only performed inside OnRender.

Fixed xna mojo reach mode additive blending.


Trans (1.04):

Android manifest and various other files moved to .build/android/templates - edit these, not the generated copies in .build/android.

Android app renamer added - see .build/android/CONFIG.TXT after first build.

Split trans.monkey driver into target-per-file layout.

Fixed array indices not being int-ized.


***** V32 *****

Modules:

JS/AS now use built-in join().

Implemented custom string_replace for JS and AS targets to avoid regex issues.

Flash target can now be used mojo-less - this is probably a pointless exercise, will revisit eventually.

Android mojo nows uses GL!

Added simple glfw LoadState/SaveState.

Fixed XNA shift/control input issues.

Mojo font now loads at startup.

LoadImage/LoadSound errors consistently return Null objects.

Flash data embedded! Will eventually be selectable. Note: flash file names must be valid identifiers for now.

Error "" added - use to 'exit app'.

Android target 'screensaver' disabled via android:keepScreenOn="true" in layout/main.xml

App suspend/resume improvements.


Trans:

Bumped to v1.03.

Fixed default multi-dim array values in java/c#.

Fixed unary expr after EOL causing syntax error.

'Then' now also allowed after 'Else If'.

Fixed Shl=, Shr=- and Mod=.

Fixed overriding methods not matching superclass methods. 

Fixed default ctors being generated when suitable ctor with defaults params already exists.

Func/var decls can now handling EOLs after commas.


***** V31 *****

NOTE! You will need to delete any existing .build/xna builds!

Add some mak samples by yours truly.

Fixed html5 support for negative width/height rects/ovals/imagerects.

Removed unimplemented DrawPoint from mojo.graphics.

Added OnSuspend/OnResume. XNA/iOS/Android only for now. See bananas/mak/suspendtest/suspendtest.monkey

Removed WP7 project from default XNA target project for XP users.

XNA mojo now uses IsolatedStorage for LoadState/SaveState for WP7 compatibility.

Fixed XNA non-clamped textures causing runtime exception with non-POT textures and "Reach". 


***** V30 *****

Rebuilt trans_macos to work on 32 bit Mac CPUs.

Changed trans stdcpp target to produce -arch i386 targets only for now.

Fixed dodgy preprocessor error reporing.

Began work on XNA Windows Phone 7 support.

Enabled 'Reach' in XNA - XNA apps should work on wider range of HW.

Fixed Consts in funcs crashing compiler.

Fixed ToArray methods in std.stack

Fixed astranslator crashing when generating return stmt for abstract void methods.


***** V29 *****

Release build!


***** V28 *****

Misc...


***** V27 *****

Monk now only requests build target first time build/run is used - select plain 'build' to change target.

More docs, samples, tutorials etc.


***** V26 *****

Added math.Log()

Fixed C# Ceil()


***** V25 *****

It's all a blur...I can't remember...sanity check version release!


***** V24 *****

Experimental: Added a top level mojo module that imports all mojo.* modules for you.

Experimental: Added a top level monkey module that imports all monkey.* modules for you - this is imported by default.

Experimental: 'std' module is now 'monkey'.

Renamed List/Vector.Remove to RemoveEach

Removed 'Module', 'Emit'

Added current dir relative imports - tweaked import/module system.


***** V23 *****

Added .xml and .json as valid text file types.

Fixed monk for new error formatting.

Change error format to:      FILE<LINE> : Error : Blah etc

Added error for accessing field from another field - sorry folks, but as/xna don't approve! Might look into this again one day though.

Fixed LoadString with files in subdirs.

Added enquoting of '\' for data strings.

Fixed boxing/unboxing weirdness causing strange 'method new not found' errors.


***** V22 *****

Added identifier not found case hints.

Fixed duplicate method/functions not being detected (overload resolve logic was just taking the first match!)

Fixed loose array casts.

Added "ElseIf" to go with "EndIf"

Addde support for End [If], End [While] and End [Next].

Print is now a 'normal' statement.

Break gone for good - renamed to Exit.

Fixed Android invalid DeviceWidth/DeviceHeight in OnCreate.

Adding checking for non-ident file names.

Fixed 'missing return' with no err info.

Added -cfgfile= option to trans for multiple config file support. Config files should still be in the same dir as trans.

Changed trans so text files are loaded/saved in binary fopen mode instead of text. This means no more conversion of EOLs, so text files should contain exactly the same chars regardless of platform. text mode had been converting \r\n to \n on Windows but not on Mac, leading to potential Mac only issues.

Fixed 'string too long' MSVC error with big text files.


***** V21 *****

Module reference is now Chrome friendly.

iPhone Simulator now killed each time before launch, for more reliable app updates. A bit experimental!

You can now use ${BLAH} to insert env vars into config file paths.

Added support for non-local index vars in for loops - please test!

Cleaned up GLFW a bit - fixed weird chars in title bar in release mode, and added defines at top of main.cpp for easier display config.


***** V20 *****

George now generates search index - nice!

Clean up glfw input handling a bit and added some CHAR defines for converting 'unprintable' keys to chars for GetChar. Please use CHAR_ETC consts for now - the <32 ones will probably stay, but the others may change.

Monk uses trans valid targets info to fill in its target combo box.

trans with no args now dumps 'valid targets' info, deduced from config file paths. Not foolproof though!

More error handling and even requesters on some targets - ooeer!


***** V19 *****

Added more errror handling in general.

Added 'Function Error( msg$ )' - can be used to 'quit' a program with a Null 'msg'.


***** V18 *****

SetColor back to 0-255.

Removed std.color, std.rect - too contentious!


***** V17 *****

Unified GLFW/iOS mojo OpenGL code.

Improved unreachable code detection, for the love of Java what a PITA!

Added 'Shl' and 'Shr'. 'Shr' is signed, no unsigned op: use '&' masking if necessary.

'trans' and 'scandir' tools moved to 'bin' dir. 'scandir' renamed to 'makemeta'.

Changed 'Break' to 'Exit' - will recognize both until next release!

Added a bunch of mojo graphics 'get' functions.

Added std.rect and std.color modules and added mojo support - SetColor now takes 0-1!

Added array/null checks to HTML5 target - more to come.


***** V16 *****

Added macos GLFW target.

Tweaked ios mojo graphics.

Added proper string comparisons in C#/Java.

Improved support for arrays of arrays.

Old style rem/endrem gone for good.

Fixed more trig degress->radians issues.

Implemented AL audio in GLFW target - added simple 'WAV' loader.

Improved parsing of 'bracketless' function statements. Should now work with New/Super.New/Super.blah 'statements' too.


***** V15 *****

Fixed skid's const bool eval bug.

Fixed glfw minimize window bug.

Fixed html5 lost mouseup event by simulating mouseup when mouse leaves canvas - not ideal, any better ideas most welcome.

Added SetBlend to mojo.graphics: 0 for normal/alpha, 1 for 'lighten' - exact algorithm is target dependent! Lighten is slow on Android!

Added SetAlpha to mojo.graphics: affects images too.

Added SetScissor to mojo.graphics - works in untransformed device coords.


***** V14 *****

Added private imports.

Added -update, -build to trans.

Added GC to glfw/ios targets.

MilliSecs renamed to Millisecs.

gxtk renamed to mojo.

iphone target renamed to ios.

std.system moved to trans.system.


***** V13 *****

Added LoadString/SaveString functions to gxtp.app

Added '-config=' option to trans - options are debug or release. Doesn't do much/anything yet!

Added '-clean' option to trans for deleting target build dir (used to always do this).

Added glfw target for 'native' apps - use glfw API for OS, OpenAL for Audio, stb_image for images...only windows for now...requires vc2010

Resurrected 'Strict' mode!

Added 'strict', 'void' to keywords in toker.


***** V12 *****

SetFont/DrawText added. These are very simple and meant mainly for debugging purposes.

Key hits now auto flushed at end of OnUpdate - use 'em or lose 'em!

Javascript version now global-less (except for startup...)!

LoadSave/SaveState added.

XNA upgraded to V4!

Global inits should now be in correct order.

MilliSecs/SetUpdateRate moved from App class to app module.


***** V11 *****

Restored langref.txt!

Fixed Bool arrays - tidied up Bool a bit in general.

String imports can now only be used to import non-monkey files.

Lazy import support added.

Include removed.

Added simple preprocessor: Uses '#' at start of line ala C.

Directives are:

#If <expression>
#Else
#Else If
#End
#Print <expression>
#Rem   (same as #If 0)

Only SIMPLE expressions supported!

The following predefined string consts can be used:

HOST		'One of: winnt macos linux
LANG		'One of: js as cs java cpp
TARGET		'One of: html5 flash xna android iphone 
MODPATH		'modules dir
PROJPATH	'top dir of project being compiled

macos should be darwin?

Block rem is now:

#Rem
------------------
This is a comment!
------------------
#End

***** V10 *****

iPhone gxtk target added.

Added TouchX#( index ),TouchY#( index ),TouchDown( index ) and TouchHit( index ).

Block rem is now Rem...EndRem


***** V9 *****

"String", "Object" now valid identifiers - no need for "@" prefix.


***** V8 *****

LoadImage/GrabImage syntax changed - see gxtk docs.txt

Default image flags now 0. Use 'Image.DefaultFlags=MidHandle' for auto-midhandle...

Added App.MilliSecs() - milliseconds since app started.

Added List.Remove( value:T ) - remove ALL instances of a value.


***** V7 *****

Added Resize( length ) method to arrays.

Slice indices now clamped to string/array length - see new Resize() for resizing arrays.

Slices: negative 'from' or 'to' params indicate distance from end of string/array.

Started some docs - see docs.txt in std and gxtk dirs.

Renamed sqr -> sqrt.

Main trans app renamed to trans_hostos, eg: one of trans_macos, trans_linux, trans_win32.exe - no .exe etensions for non-windows platforms.

Add Sgn to math.

Added DrawLine, DrawOval, DrawCircle, DrawEllipse to gxtk.graphics

OnLoading now called instead of OnUpdate/OnRender if app is still Loading stuff.
