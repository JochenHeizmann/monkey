
#Module monkey.boxes

The boxes module provides a set of classes that enable you to store (or 'box') primitive values such as ints, floats and strings in an object.

This is often useful when dealing with containers such as lists or stacks, as containers are only able to store objects, not primitive values.

As a convenience, all built-in monkey container classes include 'boxing' versions for ints, floats and strings. This allows you to use primitive values with the container type. For example, the @IntList class allows you to create lists of ints.


#Class IntObject

Syntax::

Class @IntObject

Description::

An @IntObject provides storage for a single int value.

The value to be stored should be passed to an @IntObject's @New method when it is constructed.

@IntObject provides 3 'unboxing' methods - @ToInt, @ToFloat and @ToString - that may be used to retrieve the stored value.


#Method New

Syntax::

Method @New( @value )

Method @New( @value# )

Parameters::

@value - an int value.

@value# - a float value.

Description::

Constructs an @IntObject object with an existing int or float value.

The value is converted to an int before being stored in the @IntObject.


#Method ToInt

Syntax::

Method @ToInt()

Description::

Returns the value stored in the @IntObject.


#Method ToFloat

Syntax::

Method @ToFloat#()

Description::

Converts the int value stored in the @IntObject to a float value and returns it.


#Method ToString

Syntax::

Method @ToString$()

Description::

Converts the value stored in the @IntObject to a string value and returns it.


#End 'Class IntObject


#Class FloatObject

Syntax::

Class @FloatObject

Description::

A @FloatObject provides storage for a single float value.

The value to be stored should be passed to an @FloatObject's @New method when it is constructed.

@FloatObject provides 3 'unboxing' methods - @ToInt, @ToFloat and @ToString - that may be used to retrieve the stored value.


#Method New

Syntax::

Method @New( @value )

Method @New( @value# )

Parameters::

@value - an int value.

@value# - a float value.

Description::

Constructs a @FloatObject object with an int or float value.

The value is converted to a float before being stored in the @FloatObject.


#Method ToInt

Syntax::

Method @ToInt()

Description::

Converts the value stored in the @FloatObject to an int and returns it.


#Method ToFloat

Syntax::

Method @ToFloat#()

Description::

Returns the float value stored in the @FloatObject.


#Method ToString

Syntax::

Method @ToString$()

Description::

Converts the float value contained in the @FloatObject to a string and returns it.


#End 'Class FloatObject


#Class StringObject

Syntax::

Class @StringObject

Description::

A @StringObject provides storage for a string value.

The value to be stored should be passed to the @StringObject's New method when it is constructed.

The value stored in a @StringObject can be retrieved using the @StringObject.ToString method.

#Method New

Syntax::

Method @New( @value )

Method @New( @value# )

Method @New( @value$ )

Parameters::

@value - an int value.

@value# - a float value.

@value$ - a string value.

Description::

Constructs a @StringObject from an int, float or string value.

The value is first converted to a string if necessary before being stored in the @StringObject.


#Method ToString

Syntax::

Method @ToString$()

Description::

Returns the value contained in the @StringObject.


#End 'Class StringObject
