
#Module monkey.lang

The lang module provides support for various 'built in' feature and types in monkey.


#Function Print

Syntax::

Function @Print( @str$ )

Parameters::

@str - string to print.

Description::

Prints @str to an appropriate output 'device'.

Output devices differ from target to target. Currently, @Print uses the following outut devices:

@GLFW, @iOS, @XNA - prints to C runtime 'stdout'.

@HTML5 - prints to a HTML textarea element with id 'GameConsole' if present, and to window.console if defined.

@Flash - prints to special overlay.

@Android - print not currently supported.


#Function Error

Syntax::

Function @Error( @str$ )

Parameters::

@str - details of the error.

Description::

Generates a runtime error.

This will stop the program and attempt to notify the user with @str as an error message.


#Type Int

The @Int type is a fundamental monkey type used to represent signed integer values.

Please see the @Types section of the monkey language reference for more information on the int type.

#End


#Type Float

The @Float type is a fundamental monkey type used to represent floating point values.

Please see the @Types section of the monkey language reference for more information on the float type.

#End

#Type String

The @String type is a fundamental monkey type used to represent sequences of characters.

Please see the @Types section of the monkey language reference for more information on the string type.


#Method Length - Get length of string

Syntax::

Method @Length() Property

Description::

Returns the number of characters contained in the string.

#Method Compare

Syntax::

Method @Compare( @str$ )

Description:

Returns a value <0 if this string is less than @str, a value >0 if this string is greater than @str, or 0 if this string equals @str.


#Method Find - Find first occurance of substring

Syntax::

Method @Find( @subString$, @start=0 )

Parameters::

@subString - substring to find.

@start - start index for search.

Description::

Searches this string for @subString starting at index @start.

Returns the 0-based index of @subString if found, or -1 if not found.


#Method FindLast - Find last occurance of substring

Syntax::

Method @FindLast( @subString$ )

Method @FindLast( @subString$, @start )

Parameters::

@subString - substring to find.

@start - start index for search.

Description::

Returns the 0-based index of @subString if found, or -1 if not found.

The first version searches this string backwards for @subString.

The second version searches this string backwards for @subString starting at index @start.


#Method Trim - Remove leading and trailing whitespace

Syntax::

Method @Trim$()

Description::

Removes any leading and trailing whitespace from this string and returns the result.


#Method Join - Join array of strings

Syntax::

Method @Join$( @pieces$[] )

Parameters::

@pieces - an array of strings to join.

Description::

Concatenates the elements of @pieces using this string as a separator and returns the result.


#Method Split - Split string into pieces

Syntax::

Method @Split$[]( @separator$ )

Parameters::

@separator - a string value.

Description::

Splits this string in an array of substrings, using @separator to determine where to split.


#Method Replace - Find and replace contents of string

Syntax::

Method @Replace$( @findString$, @replaceString$ )

Parameters::

@findString, @replaceString - string values.

Description::

Replaces all occurances of @findString with @replaceString and returns the result.


#Method ToLower - Convert string to lowercase

Syntax::

Method @ToLower$()

Description::

Converts this string to lowercase and returns the result.


#Method ToUpper - Convert string to lowercase

Syntax::

Method @ToUpper$()

Description::

Converts this string to uppercase and returns the result.


#Method Contains - Determine if string contains substring

Syntax::

Method @Contains?( @subString$ )

Parameters::

@subString - string value.

Description::

Returns @True if this string contains any occurances of @subString, else @False.


#Method StartsWith - Determine if string starts with substring

Syntax::

Method @StartsWith?( @subString$ )

Parameters::

@subString - a string value.

Description::

Returns @True if this string starts with @subString, else @False.


#Method EndsWith - Determine if string ends with substring

Syntax::

Method @EndsWith?( @subString$ )

Parameters::

@subString - a string value.

Description::

Returns @True if this string ends with with @subString, else @False.


#Function FromChar - Convert character code to string

Syntax::

Function @FromChar$( @charCode )

Parameters::

@charCode - character to create string with.

Description::

Creates and returns a string of length 1 containing the character code specified by @charCode.


#End	'Class String

#Type Array

The @Array type is a fundamental monkey type used to represent array values.

Please see the @Types section of the monkey language reference for more information on the array type.

#Method Length - Get array length

Syntax::

Method @Length() Property

Description::

Returns the number of elements contained in the array. 


#Method Resize

Syntax::

Method @Resize:Array( @newLength )

Parameters::

@newLength - new array length

Description::

Returns a copy of this array, resized to @newLength.


#End	'Type Array


#Class Object

The Object class is the common base class for all monkey objects.

The object class currently has no members.

Please see the @{Classes and objects} section of the monkey language reference for more information about class and objects.

#End	'Class Object
